create table order_cache
(
	user_id varchar(20) not null,
	traffic_id varchar(8) not null,
	traffic_start_time datetime not null,
	traffic_cost  money not null
)

/*
插入订单的时候先插入到order_cache;
然后判断订单是否允许.
*/


create table order_info
(
	order_id varchar(20) not null,
	traffic_id varchar(8) not null,
	traffic_start_time datetime not null,
	traffic_seat int not null,
	traffic_cost money not null,
	order_valid int default 1 /*1未领取,2已领取,3过期,4退票,5其他原因作废;*/
);

create table order_form
(
	order_id varchar(20) primary key,
	order_cost money not null,
	user_id varchar(20) not null,
	order_time datetime not null,
);

/*


create trigger cache_insert
on order_cache
instead of insert
as 
begin
if (select count(*)from traffic_all,(select traffic_id as id,traffic_start_time as start_time,count(*) as num from inserted group by traffic_id,traffic_start_time)ls where traffic_all.seat>num and traffic_all.id=ls.id and traffic_all.start_time=ls.start_time)<(select count(*) from (select distinct traffic_id,traffic_start_time from inserted)a)

	rollback;
end


*/


/*
create trigger cache_inserted
on order_cache
after insert
as 
begin
	while (select count(*) from order_cache)>0
	begin
		if (select seat from traffic_all where id=(select top 1 traffic_id from order_cache order by traffic_id,traffic_start_time) and start_time=(select top 1 traffic_start_time from order_cache order by traffic_id,traffic_start_time))>0
		begin
			update traffic_all set seat=seat-1 where id=(select top 1 traffic_id from order_cache order by traffic_id,traffic_start_time) and start_time=(select top 1 traffic_start_time from order_cache order by traffic_id,traffic_start_time);
			insert into order_info select top 1 (select count(*) from order_form),traffic_id,traffic_start_time,(select seat from traffic_all where id=(select top 1 traffic_id from order_cache order by traffic_id,traffic_start_time) and start_time=(select top 1 traffic_start_time from order_cache order by traffic_id,traffic_start_time)),traffic_cost,1 from order_cache order by traffic_id,traffic_start_time;
			
			delete top(1) from order_cache where traffic_id=(select top 1 traffic_id from order_cache order by traffic_id,traffic_start_time) and traffic_start_time=(select top 1 traffic_start_time from order_cache order by traffic_id,traffic_start_time);
		end
		else
			rollback;
	end
	insert into order_form select top 1 (select count(*) from order_form)+1,(select sum(traffic_cost)from inserted),user_id,GETDATE() from inserted;
	update user_info set user_money=user_money-(select sum(traffic_cost) from inserted) where user_id=(select top 1 user_id from inserted);
end

*/


/*
create clustered index order_index
on order_info(order_id);
*/